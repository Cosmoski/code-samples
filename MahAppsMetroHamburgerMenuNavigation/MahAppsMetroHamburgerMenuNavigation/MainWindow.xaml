<controls:MetroWindow x:Class="MahAppsMetroHamburgerMenuNavigation.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:viewModels="clr-namespace:MahAppsMetroHamburgerMenuNavigation.ViewModels"
                      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                      mc:Ignorable="d"
                      GlowBrush="{DynamicResource MahApps.Brushes.AccentBase}"
                      Title="MainWindow"
                      WindowTransitionsEnabled="False"
                      WindowStartupLocation="CenterScreen"
                      Height="450"
                      Width="600">

    <controls:MetroWindow.DataContext>
        <viewModels:ShellViewModel />
    </controls:MetroWindow.DataContext>

    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands ShowSeparators="False">
            <Button x:Name="GoBackButton"
                    Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                    Click="GoBack_OnClick">
                <iconPacks:PackIconMaterial Kind="ArrowLeft" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <Grid>

        <Grid.Resources>

            <DataTemplate x:Key="MenuItemTemplate"
                          DataType="{x:Type viewModels:MenuItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    Content="{Binding Icon}" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <Style TargetType="{x:Type Frame}" BasedOn="{StaticResource {x:Type Frame}}">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                <Setter Property="ClipToBounds" Value="True" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <controls:TransitioningContentControl Content="{Binding}" Transition="Custom" RestartTransitionOnContentChange="True">
                                <controls:TransitioningContentControl.CustomVisualStates>
                                    <VisualState x:Name="CustomTransition">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="CurrentContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0" KeySpline="0.1, 0.9, 0.2, 1" />
                                            </DoubleAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetName="PreviousContentPresentationSite"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </controls:TransitioningContentControl.CustomVisualStates>
                            </controls:TransitioningContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>

        <controls:HamburgerMenu x:Name="HamburgerMenuControl"
                                IsPaneOpen="False"
                                ItemsSource="{Binding Menu}"
                                OptionsItemsSource="{Binding OptionsMenu}"
                                ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                                ItemTemplate="{StaticResource MenuItemTemplate}"
                                OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                                DisplayMode="CompactInline" />

    </Grid>

</controls:MetroWindow>